// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: peer_connection_api.proto

#ifndef PROTOBUF_peer_5fconnection_5fapi_2eproto__INCLUDED
#define PROTOBUF_peer_5fconnection_5fapi_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace peer_connection {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_peer_5fconnection_5fapi_2eproto();
void protobuf_AssignDesc_peer_5fconnection_5fapi_2eproto();
void protobuf_ShutdownFile_peer_5fconnection_5fapi_2eproto();

class OfferDescriptor;
class AnswerDescriptor;
class CreateSessionDescriptionResponse;
class SetSessionDescriptionResponse;
class SessionDescription;
class StartStreamingRequest;
class StartStreamingResponse;
class StopStreamingRequest;
class StopStreamingResponse;
class ShutdownRequest;
class ShutdownResponse;

// ===================================================================

class OfferDescriptor : public ::google::protobuf::Message {
 public:
  OfferDescriptor();
  virtual ~OfferDescriptor();

  OfferDescriptor(const OfferDescriptor& from);

  inline OfferDescriptor& operator=(const OfferDescriptor& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OfferDescriptor& default_instance();

  void Swap(OfferDescriptor* other);

  // implements Message ----------------------------------------------

  inline OfferDescriptor* New() const { return New(NULL); }

  OfferDescriptor* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OfferDescriptor& from);
  void MergeFrom(const OfferDescriptor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OfferDescriptor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string content_type = 1;
  inline void clear_content_type();
  static const int kContentTypeFieldNumber = 1;
  inline const ::std::string& content_type() const;
  inline void set_content_type(const ::std::string& value);
  inline void set_content_type(const char* value);
  inline void set_content_type(const char* value, size_t size);
  inline ::std::string* mutable_content_type();
  inline ::std::string* release_content_type();
  inline void set_allocated_content_type(::std::string* content_type);

  // @@protoc_insertion_point(class_scope:peer_connection.OfferDescriptor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr content_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_AssignDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_ShutdownFile_peer_5fconnection_5fapi_2eproto();

  void InitAsDefaultInstance();
  static OfferDescriptor* default_instance_;
};
// -------------------------------------------------------------------

class AnswerDescriptor : public ::google::protobuf::Message {
 public:
  AnswerDescriptor();
  virtual ~AnswerDescriptor();

  AnswerDescriptor(const AnswerDescriptor& from);

  inline AnswerDescriptor& operator=(const AnswerDescriptor& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnswerDescriptor& default_instance();

  void Swap(AnswerDescriptor* other);

  // implements Message ----------------------------------------------

  inline AnswerDescriptor* New() const { return New(NULL); }

  AnswerDescriptor* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnswerDescriptor& from);
  void MergeFrom(const AnswerDescriptor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AnswerDescriptor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .peer_connection.SessionDescription session_description = 1;
  inline bool has_session_description() const;
  inline void clear_session_description();
  static const int kSessionDescriptionFieldNumber = 1;
  inline const ::peer_connection::SessionDescription& session_description() const;
  inline ::peer_connection::SessionDescription* mutable_session_description();
  inline ::peer_connection::SessionDescription* release_session_description();
  inline void set_allocated_session_description(::peer_connection::SessionDescription* session_description);

  // @@protoc_insertion_point(class_scope:peer_connection.AnswerDescriptor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::peer_connection::SessionDescription* session_description_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_AssignDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_ShutdownFile_peer_5fconnection_5fapi_2eproto();

  void InitAsDefaultInstance();
  static AnswerDescriptor* default_instance_;
};
// -------------------------------------------------------------------

class CreateSessionDescriptionResponse : public ::google::protobuf::Message {
 public:
  CreateSessionDescriptionResponse();
  virtual ~CreateSessionDescriptionResponse();

  CreateSessionDescriptionResponse(const CreateSessionDescriptionResponse& from);

  inline CreateSessionDescriptionResponse& operator=(const CreateSessionDescriptionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateSessionDescriptionResponse& default_instance();

  void Swap(CreateSessionDescriptionResponse* other);

  // implements Message ----------------------------------------------

  inline CreateSessionDescriptionResponse* New() const { return New(NULL); }

  CreateSessionDescriptionResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateSessionDescriptionResponse& from);
  void MergeFrom(const CreateSessionDescriptionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateSessionDescriptionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 response_code = 1;
  inline void clear_response_code();
  static const int kResponseCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 response_code() const;
  inline void set_response_code(::google::protobuf::uint32 value);

  // optional string response_description = 2;
  inline void clear_response_description();
  static const int kResponseDescriptionFieldNumber = 2;
  inline const ::std::string& response_description() const;
  inline void set_response_description(const ::std::string& value);
  inline void set_response_description(const char* value);
  inline void set_response_description(const char* value, size_t size);
  inline ::std::string* mutable_response_description();
  inline ::std::string* release_response_description();
  inline void set_allocated_response_description(::std::string* response_description);

  // optional .peer_connection.SessionDescription session_description = 3;
  inline bool has_session_description() const;
  inline void clear_session_description();
  static const int kSessionDescriptionFieldNumber = 3;
  inline const ::peer_connection::SessionDescription& session_description() const;
  inline ::peer_connection::SessionDescription* mutable_session_description();
  inline ::peer_connection::SessionDescription* release_session_description();
  inline void set_allocated_session_description(::peer_connection::SessionDescription* session_description);

  // @@protoc_insertion_point(class_scope:peer_connection.CreateSessionDescriptionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr response_description_;
  ::peer_connection::SessionDescription* session_description_;
  ::google::protobuf::uint32 response_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_AssignDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_ShutdownFile_peer_5fconnection_5fapi_2eproto();

  void InitAsDefaultInstance();
  static CreateSessionDescriptionResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetSessionDescriptionResponse : public ::google::protobuf::Message {
 public:
  SetSessionDescriptionResponse();
  virtual ~SetSessionDescriptionResponse();

  SetSessionDescriptionResponse(const SetSessionDescriptionResponse& from);

  inline SetSessionDescriptionResponse& operator=(const SetSessionDescriptionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetSessionDescriptionResponse& default_instance();

  void Swap(SetSessionDescriptionResponse* other);

  // implements Message ----------------------------------------------

  inline SetSessionDescriptionResponse* New() const { return New(NULL); }

  SetSessionDescriptionResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetSessionDescriptionResponse& from);
  void MergeFrom(const SetSessionDescriptionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetSessionDescriptionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 response_code = 1;
  inline void clear_response_code();
  static const int kResponseCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 response_code() const;
  inline void set_response_code(::google::protobuf::uint32 value);

  // optional string response_description = 2;
  inline void clear_response_description();
  static const int kResponseDescriptionFieldNumber = 2;
  inline const ::std::string& response_description() const;
  inline void set_response_description(const ::std::string& value);
  inline void set_response_description(const char* value);
  inline void set_response_description(const char* value, size_t size);
  inline ::std::string* mutable_response_description();
  inline ::std::string* release_response_description();
  inline void set_allocated_response_description(::std::string* response_description);

  // @@protoc_insertion_point(class_scope:peer_connection.SetSessionDescriptionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr response_description_;
  ::google::protobuf::uint32 response_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_AssignDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_ShutdownFile_peer_5fconnection_5fapi_2eproto();

  void InitAsDefaultInstance();
  static SetSessionDescriptionResponse* default_instance_;
};
// -------------------------------------------------------------------

class SessionDescription : public ::google::protobuf::Message {
 public:
  SessionDescription();
  virtual ~SessionDescription();

  SessionDescription(const SessionDescription& from);

  inline SessionDescription& operator=(const SessionDescription& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionDescription& default_instance();

  void Swap(SessionDescription* other);

  // implements Message ----------------------------------------------

  inline SessionDescription* New() const { return New(NULL); }

  SessionDescription* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SessionDescription& from);
  void MergeFrom(const SessionDescription& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SessionDescription* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string content_type = 1;
  inline void clear_content_type();
  static const int kContentTypeFieldNumber = 1;
  inline const ::std::string& content_type() const;
  inline void set_content_type(const ::std::string& value);
  inline void set_content_type(const char* value);
  inline void set_content_type(const char* value, size_t size);
  inline ::std::string* mutable_content_type();
  inline ::std::string* release_content_type();
  inline void set_allocated_content_type(::std::string* content_type);

  // optional string session_description = 2;
  inline void clear_session_description();
  static const int kSessionDescriptionFieldNumber = 2;
  inline const ::std::string& session_description() const;
  inline void set_session_description(const ::std::string& value);
  inline void set_session_description(const char* value);
  inline void set_session_description(const char* value, size_t size);
  inline ::std::string* mutable_session_description();
  inline ::std::string* release_session_description();
  inline void set_allocated_session_description(::std::string* session_description);

  // @@protoc_insertion_point(class_scope:peer_connection.SessionDescription)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr content_type_;
  ::google::protobuf::internal::ArenaStringPtr session_description_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_AssignDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_ShutdownFile_peer_5fconnection_5fapi_2eproto();

  void InitAsDefaultInstance();
  static SessionDescription* default_instance_;
};
// -------------------------------------------------------------------

class StartStreamingRequest : public ::google::protobuf::Message {
 public:
  StartStreamingRequest();
  virtual ~StartStreamingRequest();

  StartStreamingRequest(const StartStreamingRequest& from);

  inline StartStreamingRequest& operator=(const StartStreamingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartStreamingRequest& default_instance();

  void Swap(StartStreamingRequest* other);

  // implements Message ----------------------------------------------

  inline StartStreamingRequest* New() const { return New(NULL); }

  StartStreamingRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartStreamingRequest& from);
  void MergeFrom(const StartStreamingRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StartStreamingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:peer_connection.StartStreamingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_AssignDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_ShutdownFile_peer_5fconnection_5fapi_2eproto();

  void InitAsDefaultInstance();
  static StartStreamingRequest* default_instance_;
};
// -------------------------------------------------------------------

class StartStreamingResponse : public ::google::protobuf::Message {
 public:
  StartStreamingResponse();
  virtual ~StartStreamingResponse();

  StartStreamingResponse(const StartStreamingResponse& from);

  inline StartStreamingResponse& operator=(const StartStreamingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartStreamingResponse& default_instance();

  void Swap(StartStreamingResponse* other);

  // implements Message ----------------------------------------------

  inline StartStreamingResponse* New() const { return New(NULL); }

  StartStreamingResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartStreamingResponse& from);
  void MergeFrom(const StartStreamingResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StartStreamingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 response_code = 1;
  inline void clear_response_code();
  static const int kResponseCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 response_code() const;
  inline void set_response_code(::google::protobuf::uint32 value);

  // optional string response_description = 2;
  inline void clear_response_description();
  static const int kResponseDescriptionFieldNumber = 2;
  inline const ::std::string& response_description() const;
  inline void set_response_description(const ::std::string& value);
  inline void set_response_description(const char* value);
  inline void set_response_description(const char* value, size_t size);
  inline ::std::string* mutable_response_description();
  inline ::std::string* release_response_description();
  inline void set_allocated_response_description(::std::string* response_description);

  // @@protoc_insertion_point(class_scope:peer_connection.StartStreamingResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr response_description_;
  ::google::protobuf::uint32 response_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_AssignDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_ShutdownFile_peer_5fconnection_5fapi_2eproto();

  void InitAsDefaultInstance();
  static StartStreamingResponse* default_instance_;
};
// -------------------------------------------------------------------

class StopStreamingRequest : public ::google::protobuf::Message {
 public:
  StopStreamingRequest();
  virtual ~StopStreamingRequest();

  StopStreamingRequest(const StopStreamingRequest& from);

  inline StopStreamingRequest& operator=(const StopStreamingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StopStreamingRequest& default_instance();

  void Swap(StopStreamingRequest* other);

  // implements Message ----------------------------------------------

  inline StopStreamingRequest* New() const { return New(NULL); }

  StopStreamingRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StopStreamingRequest& from);
  void MergeFrom(const StopStreamingRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StopStreamingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:peer_connection.StopStreamingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_AssignDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_ShutdownFile_peer_5fconnection_5fapi_2eproto();

  void InitAsDefaultInstance();
  static StopStreamingRequest* default_instance_;
};
// -------------------------------------------------------------------

class StopStreamingResponse : public ::google::protobuf::Message {
 public:
  StopStreamingResponse();
  virtual ~StopStreamingResponse();

  StopStreamingResponse(const StopStreamingResponse& from);

  inline StopStreamingResponse& operator=(const StopStreamingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StopStreamingResponse& default_instance();

  void Swap(StopStreamingResponse* other);

  // implements Message ----------------------------------------------

  inline StopStreamingResponse* New() const { return New(NULL); }

  StopStreamingResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StopStreamingResponse& from);
  void MergeFrom(const StopStreamingResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StopStreamingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 response_code = 1;
  inline void clear_response_code();
  static const int kResponseCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 response_code() const;
  inline void set_response_code(::google::protobuf::uint32 value);

  // optional string response_description = 2;
  inline void clear_response_description();
  static const int kResponseDescriptionFieldNumber = 2;
  inline const ::std::string& response_description() const;
  inline void set_response_description(const ::std::string& value);
  inline void set_response_description(const char* value);
  inline void set_response_description(const char* value, size_t size);
  inline ::std::string* mutable_response_description();
  inline ::std::string* release_response_description();
  inline void set_allocated_response_description(::std::string* response_description);

  // @@protoc_insertion_point(class_scope:peer_connection.StopStreamingResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr response_description_;
  ::google::protobuf::uint32 response_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_AssignDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_ShutdownFile_peer_5fconnection_5fapi_2eproto();

  void InitAsDefaultInstance();
  static StopStreamingResponse* default_instance_;
};
// -------------------------------------------------------------------

class ShutdownRequest : public ::google::protobuf::Message {
 public:
  ShutdownRequest();
  virtual ~ShutdownRequest();

  ShutdownRequest(const ShutdownRequest& from);

  inline ShutdownRequest& operator=(const ShutdownRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShutdownRequest& default_instance();

  void Swap(ShutdownRequest* other);

  // implements Message ----------------------------------------------

  inline ShutdownRequest* New() const { return New(NULL); }

  ShutdownRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShutdownRequest& from);
  void MergeFrom(const ShutdownRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShutdownRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:peer_connection.ShutdownRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_AssignDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_ShutdownFile_peer_5fconnection_5fapi_2eproto();

  void InitAsDefaultInstance();
  static ShutdownRequest* default_instance_;
};
// -------------------------------------------------------------------

class ShutdownResponse : public ::google::protobuf::Message {
 public:
  ShutdownResponse();
  virtual ~ShutdownResponse();

  ShutdownResponse(const ShutdownResponse& from);

  inline ShutdownResponse& operator=(const ShutdownResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShutdownResponse& default_instance();

  void Swap(ShutdownResponse* other);

  // implements Message ----------------------------------------------

  inline ShutdownResponse* New() const { return New(NULL); }

  ShutdownResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShutdownResponse& from);
  void MergeFrom(const ShutdownResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShutdownResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 response_code = 1;
  inline void clear_response_code();
  static const int kResponseCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 response_code() const;
  inline void set_response_code(::google::protobuf::uint32 value);

  // optional string response_description = 2;
  inline void clear_response_description();
  static const int kResponseDescriptionFieldNumber = 2;
  inline const ::std::string& response_description() const;
  inline void set_response_description(const ::std::string& value);
  inline void set_response_description(const char* value);
  inline void set_response_description(const char* value, size_t size);
  inline ::std::string* mutable_response_description();
  inline ::std::string* release_response_description();
  inline void set_allocated_response_description(::std::string* response_description);

  // @@protoc_insertion_point(class_scope:peer_connection.ShutdownResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr response_description_;
  ::google::protobuf::uint32 response_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_AssignDesc_peer_5fconnection_5fapi_2eproto();
  friend void protobuf_ShutdownFile_peer_5fconnection_5fapi_2eproto();

  void InitAsDefaultInstance();
  static ShutdownResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// OfferDescriptor

// optional string content_type = 1;
inline void OfferDescriptor::clear_content_type() {
  content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfferDescriptor::content_type() const {
  // @@protoc_insertion_point(field_get:peer_connection.OfferDescriptor.content_type)
  return content_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfferDescriptor::set_content_type(const ::std::string& value) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peer_connection.OfferDescriptor.content_type)
}
inline void OfferDescriptor::set_content_type(const char* value) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peer_connection.OfferDescriptor.content_type)
}
inline void OfferDescriptor::set_content_type(const char* value, size_t size) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peer_connection.OfferDescriptor.content_type)
}
inline ::std::string* OfferDescriptor::mutable_content_type() {
  
  // @@protoc_insertion_point(field_mutable:peer_connection.OfferDescriptor.content_type)
  return content_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfferDescriptor::release_content_type() {
  
  return content_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfferDescriptor::set_allocated_content_type(::std::string* content_type) {
  if (content_type != NULL) {
    
  } else {
    
  }
  content_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_type);
  // @@protoc_insertion_point(field_set_allocated:peer_connection.OfferDescriptor.content_type)
}

// -------------------------------------------------------------------

// AnswerDescriptor

// optional .peer_connection.SessionDescription session_description = 1;
inline bool AnswerDescriptor::has_session_description() const {
  return !_is_default_instance_ && session_description_ != NULL;
}
inline void AnswerDescriptor::clear_session_description() {
  if (session_description_ != NULL) delete session_description_;
  session_description_ = NULL;
}
inline const ::peer_connection::SessionDescription& AnswerDescriptor::session_description() const {
  // @@protoc_insertion_point(field_get:peer_connection.AnswerDescriptor.session_description)
  return session_description_ != NULL ? *session_description_ : *default_instance_->session_description_;
}
inline ::peer_connection::SessionDescription* AnswerDescriptor::mutable_session_description() {
  
  if (session_description_ == NULL) {
    session_description_ = new ::peer_connection::SessionDescription;
  }
  // @@protoc_insertion_point(field_mutable:peer_connection.AnswerDescriptor.session_description)
  return session_description_;
}
inline ::peer_connection::SessionDescription* AnswerDescriptor::release_session_description() {
  
  ::peer_connection::SessionDescription* temp = session_description_;
  session_description_ = NULL;
  return temp;
}
inline void AnswerDescriptor::set_allocated_session_description(::peer_connection::SessionDescription* session_description) {
  delete session_description_;
  session_description_ = session_description;
  if (session_description) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:peer_connection.AnswerDescriptor.session_description)
}

// -------------------------------------------------------------------

// CreateSessionDescriptionResponse

// optional uint32 response_code = 1;
inline void CreateSessionDescriptionResponse::clear_response_code() {
  response_code_ = 0u;
}
inline ::google::protobuf::uint32 CreateSessionDescriptionResponse::response_code() const {
  // @@protoc_insertion_point(field_get:peer_connection.CreateSessionDescriptionResponse.response_code)
  return response_code_;
}
inline void CreateSessionDescriptionResponse::set_response_code(::google::protobuf::uint32 value) {
  
  response_code_ = value;
  // @@protoc_insertion_point(field_set:peer_connection.CreateSessionDescriptionResponse.response_code)
}

// optional string response_description = 2;
inline void CreateSessionDescriptionResponse::clear_response_description() {
  response_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateSessionDescriptionResponse::response_description() const {
  // @@protoc_insertion_point(field_get:peer_connection.CreateSessionDescriptionResponse.response_description)
  return response_description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateSessionDescriptionResponse::set_response_description(const ::std::string& value) {
  
  response_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peer_connection.CreateSessionDescriptionResponse.response_description)
}
inline void CreateSessionDescriptionResponse::set_response_description(const char* value) {
  
  response_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peer_connection.CreateSessionDescriptionResponse.response_description)
}
inline void CreateSessionDescriptionResponse::set_response_description(const char* value, size_t size) {
  
  response_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peer_connection.CreateSessionDescriptionResponse.response_description)
}
inline ::std::string* CreateSessionDescriptionResponse::mutable_response_description() {
  
  // @@protoc_insertion_point(field_mutable:peer_connection.CreateSessionDescriptionResponse.response_description)
  return response_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateSessionDescriptionResponse::release_response_description() {
  
  return response_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateSessionDescriptionResponse::set_allocated_response_description(::std::string* response_description) {
  if (response_description != NULL) {
    
  } else {
    
  }
  response_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_description);
  // @@protoc_insertion_point(field_set_allocated:peer_connection.CreateSessionDescriptionResponse.response_description)
}

// optional .peer_connection.SessionDescription session_description = 3;
inline bool CreateSessionDescriptionResponse::has_session_description() const {
  return !_is_default_instance_ && session_description_ != NULL;
}
inline void CreateSessionDescriptionResponse::clear_session_description() {
  if (session_description_ != NULL) delete session_description_;
  session_description_ = NULL;
}
inline const ::peer_connection::SessionDescription& CreateSessionDescriptionResponse::session_description() const {
  // @@protoc_insertion_point(field_get:peer_connection.CreateSessionDescriptionResponse.session_description)
  return session_description_ != NULL ? *session_description_ : *default_instance_->session_description_;
}
inline ::peer_connection::SessionDescription* CreateSessionDescriptionResponse::mutable_session_description() {
  
  if (session_description_ == NULL) {
    session_description_ = new ::peer_connection::SessionDescription;
  }
  // @@protoc_insertion_point(field_mutable:peer_connection.CreateSessionDescriptionResponse.session_description)
  return session_description_;
}
inline ::peer_connection::SessionDescription* CreateSessionDescriptionResponse::release_session_description() {
  
  ::peer_connection::SessionDescription* temp = session_description_;
  session_description_ = NULL;
  return temp;
}
inline void CreateSessionDescriptionResponse::set_allocated_session_description(::peer_connection::SessionDescription* session_description) {
  delete session_description_;
  session_description_ = session_description;
  if (session_description) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:peer_connection.CreateSessionDescriptionResponse.session_description)
}

// -------------------------------------------------------------------

// SetSessionDescriptionResponse

// optional uint32 response_code = 1;
inline void SetSessionDescriptionResponse::clear_response_code() {
  response_code_ = 0u;
}
inline ::google::protobuf::uint32 SetSessionDescriptionResponse::response_code() const {
  // @@protoc_insertion_point(field_get:peer_connection.SetSessionDescriptionResponse.response_code)
  return response_code_;
}
inline void SetSessionDescriptionResponse::set_response_code(::google::protobuf::uint32 value) {
  
  response_code_ = value;
  // @@protoc_insertion_point(field_set:peer_connection.SetSessionDescriptionResponse.response_code)
}

// optional string response_description = 2;
inline void SetSessionDescriptionResponse::clear_response_description() {
  response_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetSessionDescriptionResponse::response_description() const {
  // @@protoc_insertion_point(field_get:peer_connection.SetSessionDescriptionResponse.response_description)
  return response_description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetSessionDescriptionResponse::set_response_description(const ::std::string& value) {
  
  response_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peer_connection.SetSessionDescriptionResponse.response_description)
}
inline void SetSessionDescriptionResponse::set_response_description(const char* value) {
  
  response_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peer_connection.SetSessionDescriptionResponse.response_description)
}
inline void SetSessionDescriptionResponse::set_response_description(const char* value, size_t size) {
  
  response_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peer_connection.SetSessionDescriptionResponse.response_description)
}
inline ::std::string* SetSessionDescriptionResponse::mutable_response_description() {
  
  // @@protoc_insertion_point(field_mutable:peer_connection.SetSessionDescriptionResponse.response_description)
  return response_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetSessionDescriptionResponse::release_response_description() {
  
  return response_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetSessionDescriptionResponse::set_allocated_response_description(::std::string* response_description) {
  if (response_description != NULL) {
    
  } else {
    
  }
  response_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_description);
  // @@protoc_insertion_point(field_set_allocated:peer_connection.SetSessionDescriptionResponse.response_description)
}

// -------------------------------------------------------------------

// SessionDescription

// optional string content_type = 1;
inline void SessionDescription::clear_content_type() {
  content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SessionDescription::content_type() const {
  // @@protoc_insertion_point(field_get:peer_connection.SessionDescription.content_type)
  return content_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionDescription::set_content_type(const ::std::string& value) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peer_connection.SessionDescription.content_type)
}
inline void SessionDescription::set_content_type(const char* value) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peer_connection.SessionDescription.content_type)
}
inline void SessionDescription::set_content_type(const char* value, size_t size) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peer_connection.SessionDescription.content_type)
}
inline ::std::string* SessionDescription::mutable_content_type() {
  
  // @@protoc_insertion_point(field_mutable:peer_connection.SessionDescription.content_type)
  return content_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionDescription::release_content_type() {
  
  return content_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionDescription::set_allocated_content_type(::std::string* content_type) {
  if (content_type != NULL) {
    
  } else {
    
  }
  content_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_type);
  // @@protoc_insertion_point(field_set_allocated:peer_connection.SessionDescription.content_type)
}

// optional string session_description = 2;
inline void SessionDescription::clear_session_description() {
  session_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SessionDescription::session_description() const {
  // @@protoc_insertion_point(field_get:peer_connection.SessionDescription.session_description)
  return session_description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionDescription::set_session_description(const ::std::string& value) {
  
  session_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peer_connection.SessionDescription.session_description)
}
inline void SessionDescription::set_session_description(const char* value) {
  
  session_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peer_connection.SessionDescription.session_description)
}
inline void SessionDescription::set_session_description(const char* value, size_t size) {
  
  session_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peer_connection.SessionDescription.session_description)
}
inline ::std::string* SessionDescription::mutable_session_description() {
  
  // @@protoc_insertion_point(field_mutable:peer_connection.SessionDescription.session_description)
  return session_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionDescription::release_session_description() {
  
  return session_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionDescription::set_allocated_session_description(::std::string* session_description) {
  if (session_description != NULL) {
    
  } else {
    
  }
  session_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_description);
  // @@protoc_insertion_point(field_set_allocated:peer_connection.SessionDescription.session_description)
}

// -------------------------------------------------------------------

// StartStreamingRequest

// -------------------------------------------------------------------

// StartStreamingResponse

// optional uint32 response_code = 1;
inline void StartStreamingResponse::clear_response_code() {
  response_code_ = 0u;
}
inline ::google::protobuf::uint32 StartStreamingResponse::response_code() const {
  // @@protoc_insertion_point(field_get:peer_connection.StartStreamingResponse.response_code)
  return response_code_;
}
inline void StartStreamingResponse::set_response_code(::google::protobuf::uint32 value) {
  
  response_code_ = value;
  // @@protoc_insertion_point(field_set:peer_connection.StartStreamingResponse.response_code)
}

// optional string response_description = 2;
inline void StartStreamingResponse::clear_response_description() {
  response_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartStreamingResponse::response_description() const {
  // @@protoc_insertion_point(field_get:peer_connection.StartStreamingResponse.response_description)
  return response_description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartStreamingResponse::set_response_description(const ::std::string& value) {
  
  response_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peer_connection.StartStreamingResponse.response_description)
}
inline void StartStreamingResponse::set_response_description(const char* value) {
  
  response_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peer_connection.StartStreamingResponse.response_description)
}
inline void StartStreamingResponse::set_response_description(const char* value, size_t size) {
  
  response_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peer_connection.StartStreamingResponse.response_description)
}
inline ::std::string* StartStreamingResponse::mutable_response_description() {
  
  // @@protoc_insertion_point(field_mutable:peer_connection.StartStreamingResponse.response_description)
  return response_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartStreamingResponse::release_response_description() {
  
  return response_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartStreamingResponse::set_allocated_response_description(::std::string* response_description) {
  if (response_description != NULL) {
    
  } else {
    
  }
  response_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_description);
  // @@protoc_insertion_point(field_set_allocated:peer_connection.StartStreamingResponse.response_description)
}

// -------------------------------------------------------------------

// StopStreamingRequest

// -------------------------------------------------------------------

// StopStreamingResponse

// optional uint32 response_code = 1;
inline void StopStreamingResponse::clear_response_code() {
  response_code_ = 0u;
}
inline ::google::protobuf::uint32 StopStreamingResponse::response_code() const {
  // @@protoc_insertion_point(field_get:peer_connection.StopStreamingResponse.response_code)
  return response_code_;
}
inline void StopStreamingResponse::set_response_code(::google::protobuf::uint32 value) {
  
  response_code_ = value;
  // @@protoc_insertion_point(field_set:peer_connection.StopStreamingResponse.response_code)
}

// optional string response_description = 2;
inline void StopStreamingResponse::clear_response_description() {
  response_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopStreamingResponse::response_description() const {
  // @@protoc_insertion_point(field_get:peer_connection.StopStreamingResponse.response_description)
  return response_description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopStreamingResponse::set_response_description(const ::std::string& value) {
  
  response_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peer_connection.StopStreamingResponse.response_description)
}
inline void StopStreamingResponse::set_response_description(const char* value) {
  
  response_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peer_connection.StopStreamingResponse.response_description)
}
inline void StopStreamingResponse::set_response_description(const char* value, size_t size) {
  
  response_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peer_connection.StopStreamingResponse.response_description)
}
inline ::std::string* StopStreamingResponse::mutable_response_description() {
  
  // @@protoc_insertion_point(field_mutable:peer_connection.StopStreamingResponse.response_description)
  return response_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopStreamingResponse::release_response_description() {
  
  return response_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopStreamingResponse::set_allocated_response_description(::std::string* response_description) {
  if (response_description != NULL) {
    
  } else {
    
  }
  response_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_description);
  // @@protoc_insertion_point(field_set_allocated:peer_connection.StopStreamingResponse.response_description)
}

// -------------------------------------------------------------------

// ShutdownRequest

// -------------------------------------------------------------------

// ShutdownResponse

// optional uint32 response_code = 1;
inline void ShutdownResponse::clear_response_code() {
  response_code_ = 0u;
}
inline ::google::protobuf::uint32 ShutdownResponse::response_code() const {
  // @@protoc_insertion_point(field_get:peer_connection.ShutdownResponse.response_code)
  return response_code_;
}
inline void ShutdownResponse::set_response_code(::google::protobuf::uint32 value) {
  
  response_code_ = value;
  // @@protoc_insertion_point(field_set:peer_connection.ShutdownResponse.response_code)
}

// optional string response_description = 2;
inline void ShutdownResponse::clear_response_description() {
  response_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShutdownResponse::response_description() const {
  // @@protoc_insertion_point(field_get:peer_connection.ShutdownResponse.response_description)
  return response_description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShutdownResponse::set_response_description(const ::std::string& value) {
  
  response_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:peer_connection.ShutdownResponse.response_description)
}
inline void ShutdownResponse::set_response_description(const char* value) {
  
  response_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:peer_connection.ShutdownResponse.response_description)
}
inline void ShutdownResponse::set_response_description(const char* value, size_t size) {
  
  response_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:peer_connection.ShutdownResponse.response_description)
}
inline ::std::string* ShutdownResponse::mutable_response_description() {
  
  // @@protoc_insertion_point(field_mutable:peer_connection.ShutdownResponse.response_description)
  return response_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShutdownResponse::release_response_description() {
  
  return response_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShutdownResponse::set_allocated_response_description(::std::string* response_description) {
  if (response_description != NULL) {
    
  } else {
    
  }
  response_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_description);
  // @@protoc_insertion_point(field_set_allocated:peer_connection.ShutdownResponse.response_description)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace peer_connection

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_peer_5fconnection_5fapi_2eproto__INCLUDED
